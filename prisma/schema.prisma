// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  ratings     Rating[]
  asPlayerOne Match[]  @relation(name: "playerOne")
  asPlayerTwo Match[]  @relation(name: "playerTwo")
}

model Game {
  id      String   @id @default(uuid())
  name    String   @unique
  ladders Ladder[]
}

model Ladder {
  id                String   @id @default(uuid())
  name              String   @unique
  game              Game     @relation(fields: [gameId], references: [id])
  gameId            String
  eloRating         Float
  eloK              Float
  glickoRating      Float
  glickoDeviation   Float
  glickoTau         Float
  glickoVolatility  Float
  ratingPeriodGames Int
  ratingPeriodHours Int
  ratings           Rating[]
  matches           Match[]
}

model Rating {
  user             User   @relation(fields: [userId], references: [id])
  userId           String
  ladder           Ladder @relation(fields: [ladderId], references: [id])
  ladderId         String
  eloRating        Float
  eloK             Int
  glickoRating     Float
  glickoDeviation  Float
  glickoVolatility Float

  @@id([userId, ladderId])
}

model Match {
  id                      String   @id @default(uuid())
  ladder                  Ladder?   @relation(fields: [ladderId], references: [id])
  ladderId                String?   
  playerOne               User     @relation("playerOne", fields: [playerOneId], references: [id])
  playerOneId             String
  playerTwo               User     @relation("playerTwo", fields: [playerTwoId], references: [id])
  playerTwoId             String
  start                   DateTime
  end                     DateTime
  score                   Int
  rated                   Boolean
  hasGlickoRatedPlayerOne Boolean
  hasGlickoRatedPlayerTwo Boolean
  hasEloRatedPlayerOne    Boolean
  hasEloRatedPlayerTwo    Boolean
}
